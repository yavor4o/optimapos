# Generated by Django 5.2.3 on 2025-07-17 13:07

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('nomenclatures', '0004_alter_documenttype_auto_approve_conditions_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Descriptive name for this approval rule', max_length=100, verbose_name='Rule Name')),
                ('description', models.TextField(blank=True, help_text='Detailed description of when this rule applies', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this rule is currently active', verbose_name='Is Active')),
                ('sort_order', models.PositiveIntegerField(default=10, help_text='Order for applying rules (lower = higher priority)', verbose_name='Sort Order')),
                ('from_status', models.CharField(help_text='Document status this rule can be applied from', max_length=30, verbose_name='From Status')),
                ('to_status', models.CharField(help_text='Document status this rule transitions to', max_length=30, verbose_name='To Status')),
                ('min_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Minimum document amount for this rule', max_digits=15, verbose_name='Minimum Amount')),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum document amount for this rule (null = no limit)', max_digits=15, null=True, verbose_name='Maximum Amount')),
                ('currency', models.CharField(default='BGN', help_text='Currency for amount limits', max_length=3, verbose_name='Currency')),
                ('approver_type', models.CharField(choices=[('user', 'Specific User'), ('role', 'User Role/Group'), ('permission', 'User Permission'), ('dynamic', 'Dynamic (calculated)')], default='role', help_text='How the approver is determined', max_length=20, verbose_name='Approver Type')),
                ('approval_level', models.PositiveIntegerField(default=1, help_text='Level in approval hierarchy (1=first, 2=second, etc.)', verbose_name='Approval Level')),
                ('is_parallel', models.BooleanField(default=False, help_text='Can be approved in parallel with same-level rules', verbose_name='Parallel Approval')),
                ('requires_previous_level', models.BooleanField(default=True, help_text='Must previous approval levels be completed first?', verbose_name='Requires Previous Level')),
                ('auto_approve_conditions', models.JSONField(blank=True, default=dict, help_text='Conditions for automatic approval (JSON)', verbose_name='Auto Approve Conditions')),
                ('rejection_allowed', models.BooleanField(default=True, help_text='Can approver reject at this level?', verbose_name='Rejection Allowed')),
                ('escalation_days', models.PositiveIntegerField(blank=True, help_text='Days before escalating to next level (null = no escalation)', null=True, verbose_name='Escalation Days')),
                ('notify_approver', models.BooleanField(default=True, help_text='Send notification to approver when rule is triggered', verbose_name='Notify Approver')),
                ('notify_requester', models.BooleanField(default=True, help_text='Send notification to requester when approved/rejected', verbose_name='Notify Requester')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver_permission', models.ForeignKey(blank=True, help_text='Permission required to approve (if approver_type=permission)', null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.permission', verbose_name='Approver Permission')),
                ('approver_role', models.ForeignKey(blank=True, help_text='User group/role that can approve (if approver_type=role)', null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.group', verbose_name='Approver Role')),
                ('approver_user', models.ForeignKey(blank=True, help_text='Specific user who can approve (if approver_type=user)', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Approver User')),
                ('content_type', models.ForeignKey(blank=True, help_text='Model class this rule applies to (fallback if no document type)', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_approval_rules', to=settings.AUTH_USER_MODEL)),
                ('document_type', models.ForeignKey(blank=True, help_text='Specific document type this rule applies to', null=True, on_delete=django.db.models.deletion.CASCADE, to='nomenclatures.documenttype', verbose_name='Document Type')),
            ],
            options={
                'verbose_name': 'Approval Rule',
                'verbose_name_plural': 'Approval Rules',
                'ordering': ['approval_level', 'sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ApprovalLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('action', models.CharField(choices=[('submitted', 'Submitted for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('escalated', 'Escalated'), ('auto_approved', 'Auto Approved')], max_length=20, verbose_name='Action')),
                ('from_status', models.CharField(max_length=30, verbose_name='From Status')),
                ('to_status', models.CharField(max_length=30, verbose_name='To Status')),
                ('comments', models.TextField(blank=True, help_text='Additional comments or reasons', verbose_name='Comments')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('actor', models.ForeignKey(help_text='User who performed the action', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Actor')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nomenclatures.approvalrule', verbose_name='Applied Rule')),
            ],
            options={
                'verbose_name': 'Approval Log',
                'verbose_name_plural': 'Approval Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='approvalrule',
            index=models.Index(fields=['document_type', 'from_status'], name='nomenclatur_documen_6d4225_idx'),
        ),
        migrations.AddIndex(
            model_name='approvalrule',
            index=models.Index(fields=['content_type', 'from_status'], name='nomenclatur_content_4a3890_idx'),
        ),
        migrations.AddIndex(
            model_name='approvalrule',
            index=models.Index(fields=['approval_level', 'sort_order'], name='nomenclatur_approva_4e1ec9_idx'),
        ),
        migrations.AddIndex(
            model_name='approvalrule',
            index=models.Index(fields=['min_amount', 'max_amount'], name='nomenclatur_min_amo_69972a_idx'),
        ),
        migrations.AddIndex(
            model_name='approvalrule',
            index=models.Index(fields=['approver_type', 'is_active'], name='nomenclatur_approve_b6fd34_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='approvalrule',
            unique_together={('document_type', 'from_status', 'to_status', 'approval_level', 'approver_role'), ('document_type', 'from_status', 'to_status', 'approval_level', 'approver_user')},
        ),
        migrations.AddIndex(
            model_name='approvallog',
            index=models.Index(fields=['content_type', 'object_id'], name='nomenclatur_content_344b5f_idx'),
        ),
        migrations.AddIndex(
            model_name='approvallog',
            index=models.Index(fields=['actor', '-timestamp'], name='nomenclatur_actor_i_4b772e_idx'),
        ),
        migrations.AddIndex(
            model_name='approvallog',
            index=models.Index(fields=['action', '-timestamp'], name='nomenclatur_action_eee812_idx'),
        ),
    ]
