# Generated by Django 5.2.3 on 2025-08-11 20:16

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('inventory', '0007_alter_inventorymovement_source_document_type'),
        ('nomenclatures', '0013_remove_documenttype_nomenclatur_affects_0555c6_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LocationNumberingAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this assignment is currently active', verbose_name='Is Active')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Assigned At')),
            ],
            options={
                'verbose_name': 'Location Numbering Assignment',
                'verbose_name_plural': 'Location Numbering Assignments',
                'ordering': ['location', 'numbering_config'],
            },
        ),
        migrations.CreateModel(
            name='NumberingConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, help_text='Unique code: A-Z, 0-9, underscore, dash only (max 20 chars)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Code must contain only uppercase letters, numbers, underscore and dash (max 20 chars)', regex='^[A-Z0-9_-]{1,20}$')], verbose_name='Code')),
                ('name', models.CharField(db_index=True, help_text='Human readable name', max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Optional detailed description', verbose_name='Description')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether this nomenclature is currently active', verbose_name='Is Active')),
                ('is_system', models.BooleanField(default=False, help_text='System nomenclatures cannot be deleted by users', verbose_name='Is System')),
                ('sort_order', models.IntegerField(default=0, help_text='For custom ordering in lists and dropdowns', verbose_name='Sort Order')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('numbering_type', models.CharField(choices=[('fiscal', 'Fiscal (10 digits, no prefix) - Bulgarian law'), ('internal', 'Internal (flexible prefix + digits)')], help_text='Fiscal documents must use 10-digit format without prefix', max_length=20, verbose_name='Numbering Type')),
                ('prefix', models.CharField(blank=True, help_text='Document prefix: REQ, PO, VAR-REQ (empty for fiscal documents)', max_length=10, verbose_name='Prefix')),
                ('digits_count', models.PositiveIntegerField(default=4, help_text='Number of digits: 4=0001, 10=0000000001 (minimum 10 for fiscal)', verbose_name='Digits Count')),
                ('current_number', models.PositiveIntegerField(default=0, help_text='Last issued number (next will be current_number + 1)', verbose_name='Current Number')),
                ('series_number', models.PositiveIntegerField(default=1, help_text='Series identifier like Microinvest: (1), (2), (23)', verbose_name='Series Number')),
                ('series_name', models.CharField(blank=True, help_text='Human-readable series name: "София магазин", "Варна офис"', max_length=100, verbose_name='Series Name')),
                ('reset_yearly', models.BooleanField(default=False, help_text='Reset counter to 0 each year (not recommended for fiscal)', verbose_name='Reset Yearly')),
                ('last_reset_year', models.PositiveIntegerField(blank=True, help_text='Year when counter was last reset', null=True, verbose_name='Last Reset Year')),
                ('is_default', models.BooleanField(default=False, help_text='Default numbering for this document type (only one per type)', verbose_name='Is Default')),
                ('max_number', models.PositiveIntegerField(blank=True, help_text='Maximum allowed number (prevents overflow)', null=True, verbose_name='Max Number')),
            ],
            options={
                'verbose_name': 'Numbering Configuration',
                'verbose_name_plural': 'Numbering Configurations',
                'ordering': ['document_type', 'series_number', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserNumberingPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'User Numbering Preference',
                'verbose_name_plural': 'User Numbering Preferences',
                'ordering': ['user', 'document_type'],
            },
        ),
        migrations.AlterModelOptions(
            name='approvalrule',
            options={'ordering': ['document_type', 'approval_level', 'sort_order'], 'verbose_name': 'Approval Rule', 'verbose_name_plural': 'Approval Rules'},
        ),
        migrations.RemoveIndex(
            model_name='approvalrule',
            name='nomenclatur_documen_6d4225_idx',
        ),
        migrations.RemoveIndex(
            model_name='approvalrule',
            name='nomenclatur_content_4a3890_idx',
        ),
        migrations.AlterUniqueTogether(
            name='approvalrule',
            unique_together=set(),
        ),


        migrations.AddField(
            model_name='approvalrule',
            name='notify_on_complete',
            field=models.BooleanField(default=True, help_text='Send notification when approval/rejection is completed', verbose_name='Notify on Complete'),
        ),
        migrations.AddField(
            model_name='approvalrule',
            name='notify_on_trigger',
            field=models.BooleanField(default=True, help_text='Send notification when this rule is triggered', verbose_name='Notify on Trigger'),
        ),
        migrations.AddField(
            model_name='approvalrule',
            name='requires_reason',
            field=models.BooleanField(default=False, help_text='Must provide reason/comment for approval/rejection?', verbose_name='Requires Reason'),
        ),
        migrations.AlterField(
            model_name='approvallog',
            name='action',
            field=models.CharField(choices=[('submitted', 'Submitted for Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('escalated', 'Escalated')], max_length=20, verbose_name='Action'),
        ),
        migrations.AlterField(
            model_name='approvallog',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type'),
        ),
        migrations.AlterField(
            model_name='approvallog',
            name='object_id',
            field=models.PositiveIntegerField(verbose_name='Object ID'),
        ),
        migrations.AlterField(
            model_name='approvallog',
            name='timestamp',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Timestamp'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='approval_level',
            field=models.PositiveIntegerField(default=1, help_text='Approval level: 1=first level, 2=second level, etc.', verbose_name='Approval Level'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='approver_permission',
            field=models.ForeignKey(blank=True, help_text='Permission required to approve (if type=permission)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approval_rules_as_permission', to='auth.permission', verbose_name='Approver Permission'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='approver_role',
            field=models.ForeignKey(blank=True, help_text='User group that can approve (if type=role)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approval_rules_as_role', to='auth.group', verbose_name='Approver Role'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='approver_type',
            field=models.CharField(choices=[('user', 'Specific User'), ('role', 'User Role/Group'), ('permission', 'Permission')], help_text='How to determine who can approve', max_length=20, verbose_name='Approver Type'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='approver_user',
            field=models.ForeignKey(blank=True, help_text='Specific user who can approve (if type=user)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approval_rules_as_user', to=settings.AUTH_USER_MODEL, verbose_name='Approver User'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_approval_rules', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='document_type',
            field=models.ForeignKey(default=1, help_text='Which document type this rule applies to', on_delete=django.db.models.deletion.CASCADE, to='nomenclatures.documenttype', verbose_name='Document Type'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='from_status',
            field=models.CharField(help_text='Document status this rule applies from: "submitted", "draft"', max_length=30, verbose_name='From Status'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='max_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Maximum document amount (null = no limit)', max_digits=15, null=True, verbose_name='Maximum Amount'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='min_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Minimum document amount this rule applies to', max_digits=15, verbose_name='Minimum Amount'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='name',
            field=models.CharField(help_text='Descriptive name: "Manager approval for orders over 1000 BGN"', max_length=100, verbose_name='Rule Name'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='to_status',
            field=models.CharField(help_text='Target status after approval: "approved", "rejected"', max_length=30, verbose_name='To Status'),
        ),
        migrations.AlterField(
            model_name='approvalrule',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated At'),
        ),
        migrations.AddIndex(
            model_name='approvallog',
            index=models.Index(fields=['rule', '-timestamp'], name='nomenclatur_rule_id_ad328c_idx'),
        ),
        migrations.AddIndex(
            model_name='approvalrule',
            index=models.Index(fields=['document_type', 'from_status', 'to_status'], name='nomenclatur_documen_a70bdd_idx'),
        ),
        migrations.AddConstraint(
            model_name='approvalrule',
            constraint=models.UniqueConstraint(fields=('document_type', 'from_status', 'to_status', 'approval_level'), name='unique_approval_rule_per_level'),
        ),
        migrations.AddField(
            model_name='locationnumberingassignment',
            name='assigned_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='numbering_assignments_made', to=settings.AUTH_USER_MODEL, verbose_name='Assigned By'),
        ),
        migrations.AddField(
            model_name='locationnumberingassignment',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='numbering_assignments', to='inventory.inventorylocation', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='numberingconfiguration',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='numberingconfiguration',
            name='document_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='numbering_configs', to='nomenclatures.documenttype', verbose_name='Document Type'),
        ),
        migrations.AddField(
            model_name='locationnumberingassignment',
            name='numbering_config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_assignments', to='nomenclatures.numberingconfiguration', verbose_name='Numbering Configuration'),
        ),
        migrations.AddField(
            model_name='usernumberingpreference',
            name='document_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_numbering_preferences', to='nomenclatures.documenttype', verbose_name='Document Type'),
        ),
        migrations.AddField(
            model_name='usernumberingpreference',
            name='preferred_config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_preferences', to='nomenclatures.numberingconfiguration', verbose_name='Preferred Configuration'),
        ),
        migrations.AddField(
            model_name='usernumberingpreference',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='numbering_preferences', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),

        migrations.RemoveField(
            model_name='approvalrule',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='approvalrule',
            name='escalation_days',
        ),
        migrations.RemoveField(
            model_name='approvalrule',
            name='is_parallel',
        ),
        migrations.RemoveField(
            model_name='approvalrule',
            name='notify_approver',
        ),
        migrations.RemoveField(
            model_name='approvalrule',
            name='notify_requester',
        ),
        migrations.AddIndex(
            model_name='numberingconfiguration',
            index=models.Index(fields=['document_type', 'numbering_type'], name='nomenclatur_documen_6650fa_idx'),
        ),
        migrations.AddIndex(
            model_name='numberingconfiguration',
            index=models.Index(fields=['document_type', 'is_default'], name='nomenclatur_documen_bfe1a1_idx'),
        ),
        migrations.AddIndex(
            model_name='numberingconfiguration',
            index=models.Index(fields=['numbering_type', 'is_active'], name='nomenclatur_numberi_547dca_idx'),
        ),
        migrations.AddIndex(
            model_name='numberingconfiguration',
            index=models.Index(fields=['series_number'], name='nomenclatur_series__2c2593_idx'),
        ),
        migrations.AddConstraint(
            model_name='numberingconfiguration',
            constraint=models.UniqueConstraint(fields=('document_type', 'series_number'), name='unique_document_type_series'),
        ),
        migrations.AddConstraint(
            model_name='numberingconfiguration',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('document_type', 'is_default'), name='unique_default_per_document_type'),
        ),
        migrations.AddIndex(
            model_name='locationnumberingassignment',
            index=models.Index(fields=['location', 'is_active'], name='nomenclatur_locatio_ed2928_idx'),
        ),
        migrations.AddIndex(
            model_name='locationnumberingassignment',
            index=models.Index(fields=['numbering_config', 'is_active'], name='nomenclatur_numberi_8c0e85_idx'),
        ),
        migrations.AddConstraint(
            model_name='locationnumberingassignment',
            constraint=models.UniqueConstraint(fields=('location', 'numbering_config'), name='unique_location_numbering'),
        ),
        migrations.AddConstraint(
            model_name='usernumberingpreference',
            constraint=models.UniqueConstraint(fields=('user', 'document_type'), name='unique_user_document_type_preference'),
        ),
    ]
