# Generated by Django 5.2.3 on 2025-07-09 19:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PriceGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Price Group Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Default discount for this group', max_digits=5, verbose_name='Default Discount %')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Price Group',
                'verbose_name_plural': 'Price Groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Warehouse Code')),
                ('name', models.CharField(max_length=100, verbose_name='Warehouse Name')),
                ('warehouse_type', models.CharField(choices=[('shop', 'Shop/Store'), ('main', 'Main Warehouse'), ('reserve', 'Reserve Warehouse')], default='shop', max_length=10, verbose_name='Warehouse Type')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('default_markup_percentage', models.DecimalField(decimal_places=2, default=30.0, help_text='Used when no specific price is set for a product', max_digits=5, verbose_name='Default Markup %')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Manager')),
            ],
            options={
                'verbose_name': 'Warehouse',
                'verbose_name_plural': 'Warehouses',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Batch Number')),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Always positive - type determines direction', max_digits=12, verbose_name='Quantity')),
                ('movement_type', models.CharField(choices=[('in', 'Incoming'), ('out', 'Outgoing')], max_length=10, verbose_name='Movement Type')),
                ('unit_price', models.DecimalField(decimal_places=4, help_text='Cost price for incoming, sale price for outgoing', max_digits=10, verbose_name='Unit Price')),
                ('document', models.CharField(max_length=50, verbose_name='Document')),
                ('document_date', models.DateField(verbose_name='Document Date')),
                ('reason', models.CharField(blank=True, max_length=100, verbose_name='Reason')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='warehouse.warehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name': 'Stock Movement',
                'verbose_name_plural': 'Stock Movements',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['warehouse', 'product', '-created_at'], name='warehouse_s_warehou_e885f4_idx'), models.Index(fields=['document', '-created_at'], name='warehouse_s_documen_e02c25_idx'), models.Index(fields=['batch_number'], name='warehouse_s_batch_n_924b37_idx'), models.Index(fields=['movement_type', '-created_at'], name='warehouse_s_movemen_b3bd47_idx')],
            },
        ),
        migrations.CreateModel(
            name='StockLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Batch Number')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('quantity', models.DecimalField(decimal_places=3, default=0, max_digits=12, verbose_name='Current Quantity')),
                ('avg_purchase_price', models.DecimalField(decimal_places=4, default=0, max_digits=10, verbose_name='Average Purchase Price')),
                ('quantity_reserved', models.DecimalField(decimal_places=3, default=0, max_digits=12, verbose_name='Quantity Reserved')),
                ('min_stock_level', models.DecimalField(decimal_places=3, default=0, max_digits=12, verbose_name='Minimum Stock Level')),
                ('last_movement_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Movement')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_levels', to='products.product', verbose_name='Product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_levels', to='warehouse.warehouse', verbose_name='Warehouse')),
            ],
            options={
                'verbose_name': 'Stock Level',
                'verbose_name_plural': 'Stock Levels',
                'indexes': [models.Index(fields=['warehouse', 'quantity'], name='warehouse_s_warehou_c69b31_idx'), models.Index(fields=['product', 'quantity'], name='warehouse_s_product_114704_idx')],
                'unique_together': {('warehouse', 'product', 'batch_number', 'expiry_date')},
            },
        ),
        migrations.CreateModel(
            name='WarehouseProductPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_price', models.DecimalField(decimal_places=2, help_text='Base selling price for this product in this warehouse', max_digits=10, verbose_name='Base Price')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_prices', to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_prices', to='warehouse.warehouse')),
            ],
            options={
                'verbose_name': 'Warehouse Product Price',
                'verbose_name_plural': 'Warehouse Product Prices',
                'unique_together': {('warehouse', 'product')},
            },
        ),
        migrations.CreateModel(
            name='WarehouseProductPriceByGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('price_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.pricegroup')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_group_prices', to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_prices', to='warehouse.warehouse')),
            ],
            options={
                'verbose_name': 'Warehouse Product Price by Group',
                'verbose_name_plural': 'Warehouse Product Prices by Group',
                'unique_together': {('warehouse', 'product', 'price_group')},
            },
        ),
        migrations.CreateModel(
            name='WarehouseProductStepPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_quantity', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='Min Quantity')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Step Price')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_step_prices', to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_prices', to='warehouse.warehouse')),
            ],
            options={
                'verbose_name': 'Warehouse Step Price',
                'verbose_name_plural': 'Warehouse Step Prices',
                'unique_together': {('warehouse', 'product', 'min_quantity')},
            },
        ),
        migrations.CreateModel(
            name='WarehousePromotionalPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Promotion Name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Promotional Price')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('min_quantity', models.DecimalField(decimal_places=3, default=1, max_digits=10, verbose_name='Min Quantity')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouse_promotions', to='products.product')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotional_prices', to='warehouse.warehouse')),
            ],
            options={
                'verbose_name': 'Warehouse Promotional Price',
                'verbose_name_plural': 'Warehouse Promotional Prices',
                'unique_together': {('warehouse', 'product', 'start_date')},
            },
        ),
    ]
