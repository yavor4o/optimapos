# Generated by Django 5.2.3 on 2025-08-09 11:18

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0003_alter_inventorymovement_source_document_type'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='inventorylocation',
            name='purchase_prices_include_vat',
        ),
        migrations.RemoveField(
            model_name='inventorylocation',
            name='sales_prices_include_vat',
        ),
        migrations.AddField(
            model_name='inventorylocation',
            name='allow_mixed_batches',
            field=models.BooleanField(default=True, help_text='Allow FIFO from different batches in one operation', verbose_name='Allow Mixed Batches'),
        ),
        migrations.AddField(
            model_name='inventorylocation',
            name='batch_tracking_mode',
            field=models.CharField(choices=[('DISABLED', 'Disabled - Never use batches'), ('OPTIONAL', 'Optional - Follow product settings'), ('ENFORCED', 'Enforced - Always require batches')], default='OPTIONAL', help_text='How this location handles batch tracking', max_length=10, verbose_name='Batch Tracking Mode'),
        ),
        migrations.AddField(
            model_name='inventorylocation',
            name='default_expiry_days',
            field=models.PositiveIntegerField(blank=True, help_text='Default expiry period for products without explicit expiry', null=True, verbose_name='Default Expiry Days'),
        ),
        migrations.AddField(
            model_name='inventorylocation',
            name='force_batch_on_receive',
            field=models.BooleanField(default=False, help_text='Force batch assignment even for non-batch products', verbose_name='Force Batch on Receive'),
        ),
    ]
