# Generated by Django 5.2.3 on 2025-07-20 14:01

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('nomenclatures', '0011_remove_documenttype_nomenclatur_require_832721_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [

        migrations.AddField(
            model_name='brand',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='brand',
            name='description',
            field=models.TextField(blank=True, help_text='Optional detailed description', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='brand',
            name='is_system',
            field=models.BooleanField(default=False, help_text='System nomenclatures cannot be deleted by users', verbose_name='Is System'),
        ),
        migrations.AddField(
            model_name='brand',
            name='sort_order',
            field=models.IntegerField(default=0, help_text='For custom ordering in lists and dropdowns', verbose_name='Sort Order'),
        ),
        migrations.AddField(
            model_name='documenttype',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='documenttype',
            name='description',
            field=models.TextField(blank=True, help_text='Optional detailed description', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='documenttype',
            name='is_system',
            field=models.BooleanField(default=False, help_text='System nomenclatures cannot be deleted by users', verbose_name='Is System'),
        ),
        migrations.AddField(
            model_name='paymenttype',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='paymenttype',
            name='description',
            field=models.TextField(blank=True, help_text='Optional detailed description', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='paymenttype',
            name='is_system',
            field=models.BooleanField(default=False, help_text='System nomenclatures cannot be deleted by users', verbose_name='Is System'),
        ),
        migrations.AddField(
            model_name='producttype',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='producttype',
            name='description',
            field=models.TextField(blank=True, help_text='Optional detailed description', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='producttype',
            name='is_system',
            field=models.BooleanField(default=False, help_text='System nomenclatures cannot be deleted by users', verbose_name='Is System'),
        ),
        migrations.AddField(
            model_name='producttype',
            name='sort_order',
            field=models.IntegerField(default=0, help_text='For custom ordering in lists and dropdowns', verbose_name='Sort Order'),
        ),
        migrations.AddField(
            model_name='taxgroup',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='taxgroup',
            name='description',
            field=models.TextField(blank=True, help_text='Optional detailed description', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='taxgroup',
            name='is_system',
            field=models.BooleanField(default=False, help_text='System nomenclatures cannot be deleted by users', verbose_name='Is System'),
        ),
        migrations.AddField(
            model_name='taxgroup',
            name='sort_order',
            field=models.IntegerField(default=0, help_text='For custom ordering in lists and dropdowns', verbose_name='Sort Order'),
        ),
        migrations.AddField(
            model_name='unitofmeasure',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='unitofmeasure',
            name='description',
            field=models.TextField(blank=True, help_text='Optional detailed description', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='unitofmeasure',
            name='is_system',
            field=models.BooleanField(default=False, help_text='System nomenclatures cannot be deleted by users', verbose_name='Is System'),
        ),
        migrations.AddField(
            model_name='unitofmeasure',
            name='sort_order',
            field=models.IntegerField(default=0, help_text='For custom ordering in lists and dropdowns', verbose_name='Sort Order'),
        ),
        migrations.AlterField(
            model_name='brand',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique code: A-Z, 0-9, underscore, dash only (max 20 chars)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Code must contain only uppercase letters, numbers, underscore and dash (max 20 chars)', regex='^[A-Z0-9_-]{1,20}$')], verbose_name='Code'),
        ),
        migrations.AlterField(
            model_name='brand',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='brand',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this nomenclature is currently active', verbose_name='Is Active'),
        ),
        migrations.AlterField(
            model_name='brand',
            name='name',
            field=models.CharField(db_index=True, help_text='Human readable name', max_length=100, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='documenttype',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique code: A-Z, 0-9, underscore, dash only (max 20 chars)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Code must contain only uppercase letters, numbers, underscore and dash (max 20 chars)', regex='^[A-Z0-9_-]{1,20}$')], verbose_name='Code'),
        ),
        migrations.AlterField(
            model_name='documenttype',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='documenttype',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this nomenclature is currently active', verbose_name='Is Active'),
        ),
        migrations.AlterField(
            model_name='documenttype',
            name='name',
            field=models.CharField(db_index=True, help_text='Human readable name', max_length=100, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='paymenttype',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique code: A-Z, 0-9, underscore, dash only (max 20 chars)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Code must contain only uppercase letters, numbers, underscore and dash (max 20 chars)', regex='^[A-Z0-9_-]{1,20}$')], verbose_name='Code'),
        ),
        migrations.AlterField(
            model_name='paymenttype',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='paymenttype',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this nomenclature is currently active', verbose_name='Is Active'),
        ),
        migrations.AlterField(
            model_name='paymenttype',
            name='name',
            field=models.CharField(db_index=True, help_text='Human readable name', max_length=100, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='producttype',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique code: A-Z, 0-9, underscore, dash only (max 20 chars)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Code must contain only uppercase letters, numbers, underscore and dash (max 20 chars)', regex='^[A-Z0-9_-]{1,20}$')], verbose_name='Code'),
        ),
        migrations.AlterField(
            model_name='producttype',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='producttype',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this nomenclature is currently active', verbose_name='Is Active'),
        ),
        migrations.AlterField(
            model_name='producttype',
            name='name',
            field=models.CharField(db_index=True, help_text='Human readable name', max_length=100, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='taxgroup',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique code: A-Z, 0-9, underscore, dash only (max 20 chars)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Code must contain only uppercase letters, numbers, underscore and dash (max 20 chars)', regex='^[A-Z0-9_-]{1,20}$')], verbose_name='Code'),
        ),
        migrations.AlterField(
            model_name='taxgroup',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='taxgroup',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this nomenclature is currently active', verbose_name='Is Active'),
        ),
        migrations.AlterField(
            model_name='taxgroup',
            name='name',
            field=models.CharField(db_index=True, help_text='Human readable name', max_length=100, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='unitofmeasure',
            name='code',
            field=models.CharField(db_index=True, help_text='Unique code: A-Z, 0-9, underscore, dash only (max 20 chars)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Code must contain only uppercase letters, numbers, underscore and dash (max 20 chars)', regex='^[A-Z0-9_-]{1,20}$')], verbose_name='Code'),
        ),
        migrations.AlterField(
            model_name='unitofmeasure',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='unitofmeasure',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this nomenclature is currently active', verbose_name='Is Active'),
        ),
        migrations.AlterField(
            model_name='unitofmeasure',
            name='name',
            field=models.CharField(db_index=True, help_text='Human readable name', max_length=100, verbose_name='Name'),
        ),
    ]
