# Generated by Django 5.2.3 on 2025-07-15 17:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('partners', '0001_initial'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique code like WH01, SHOP1, STOR1', max_length=10, unique=True, verbose_name='Location Code')),
                ('name', models.CharField(max_length=100, verbose_name='Location Name')),
                ('location_type', models.CharField(choices=[('WAREHOUSE', 'Main Warehouse'), ('SHOP', 'Shop Floor'), ('STORAGE', 'Storage Area'), ('VIRTUAL', 'Virtual Location')], default='WAREHOUSE', max_length=10, verbose_name='Location Type')),
                ('default_markup_percentage', models.DecimalField(decimal_places=2, default=30, help_text='Default markup when no specific price is set', max_digits=5, verbose_name='Default Markup Percentage')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('allow_negative_stock', models.BooleanField(default=False, help_text='Allow sales when insufficient stock', verbose_name='Allow Negative Stock')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Manager')),
            ],
            options={
                'verbose_name': 'Inventory Location',
                'verbose_name_plural': 'Inventory Locations',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='POSLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique code like POS01, CASH1', max_length=10, unique=True, verbose_name='POS Code')),
                ('name', models.CharField(max_length=100, verbose_name='POS Location Name')),
                ('address', models.TextField(blank=True, verbose_name='Address')),
                ('fiscal_device_serial', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Fiscal Device Serial')),
                ('fiscal_device_number', models.CharField(blank=True, help_text='Official registration number', max_length=20, verbose_name='Fiscal Device Number')),
                ('allow_negative_stock', models.BooleanField(default=False, help_text='Whether to allow sales when stock is insufficient', verbose_name='Allow Negative Stock Sales')),
                ('require_customer', models.BooleanField(default=False, help_text='Whether customer selection is mandatory', verbose_name='Require Customer')),
                ('receipt_printer', models.CharField(blank=True, help_text='Receipt printer name/address', max_length=100, verbose_name='Receipt Printer')),
                ('opens_at', models.TimeField(blank=True, null=True, verbose_name='Opens At')),
                ('closes_at', models.TimeField(blank=True, null=True, verbose_name='Closes At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('default_customer', models.ForeignKey(blank=True, help_text='Default customer for anonymous sales', null=True, on_delete=django.db.models.deletion.SET_NULL, to='partners.customer')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pos_locations', to='inventory.inventorylocation', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'POS Location',
                'verbose_name_plural': 'POS Locations',
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_qty', models.DecimalField(decimal_places=3, default=0, max_digits=12, verbose_name='Current Quantity')),
                ('reserved_qty', models.DecimalField(decimal_places=3, default=0, max_digits=12, verbose_name='Reserved Quantity')),
                ('avg_cost', models.DecimalField(decimal_places=4, default=0, max_digits=10, verbose_name='Average Cost')),
                ('min_stock_level', models.DecimalField(decimal_places=3, default=0, max_digits=12, verbose_name='Minimum Stock Level')),
                ('max_stock_level', models.DecimalField(decimal_places=3, default=0, max_digits=12, verbose_name='Maximum Stock Level')),
                ('last_movement_date', models.DateTimeField(blank=True, null=True, verbose_name='Last Movement')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='products.product', verbose_name='Product')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='inventory.inventorylocation', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'indexes': [models.Index(fields=['location', 'current_qty'], name='inventory_i_locatio_3548fd_idx'), models.Index(fields=['product', 'current_qty'], name='inventory_i_product_f921a2_idx')],
                'unique_together': {('location', 'product')},
            },
        ),
        migrations.CreateModel(
            name='InventoryBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50, verbose_name='Batch Number')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('received_qty', models.DecimalField(decimal_places=3, help_text='Original quantity received', max_digits=12, verbose_name='Received Quantity')),
                ('remaining_qty', models.DecimalField(decimal_places=3, help_text='Current remaining quantity', max_digits=12, verbose_name='Remaining Quantity')),
                ('cost_price', models.DecimalField(decimal_places=4, help_text='Cost price for this batch', max_digits=10, verbose_name='Cost Price')),
                ('received_date', models.DateTimeField(help_text='When this batch was received', verbose_name='Received Date')),
                ('is_unknown_batch', models.BooleanField(default=False, help_text='Auto-generated batch for products without explicit batch info', verbose_name='Is Unknown Batch')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_batches', to='products.product', verbose_name='Product')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_batches', to='inventory.inventorylocation', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Inventory Batch',
                'verbose_name_plural': 'Inventory Batches',
                'ordering': ['received_date', 'expiry_date'],
                'indexes': [models.Index(fields=['location', 'product', 'remaining_qty'], name='inventory_i_locatio_58b32a_idx'), models.Index(fields=['expiry_date', 'remaining_qty'], name='inventory_i_expiry__fa02d2_idx'), models.Index(fields=['batch_number'], name='inventory_i_batch_n_9bceae_idx')],
                'unique_together': {('location', 'product', 'batch_number', 'expiry_date')},
            },
        ),
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('IN', 'Incoming (Purchase/Receipt)'), ('OUT', 'Outgoing (Sale/Issue)'), ('TRANSFER', 'Transfer Between Locations'), ('ADJUSTMENT', 'Inventory Adjustment'), ('PRODUCTION', 'Production/Assembly'), ('CYCLE_COUNT', 'Cycle Count Correction')], max_length=15, verbose_name='Movement Type')),
                ('quantity', models.DecimalField(decimal_places=3, help_text='Always positive - type determines direction', max_digits=12, verbose_name='Quantity')),
                ('cost_price', models.DecimalField(decimal_places=4, help_text='Actual unit cost price for this specific movement', max_digits=10, verbose_name='Cost Price')),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Batch Number')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('serial_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Serial Number')),
                ('source_document_type', models.CharField(blank=True, choices=[('PURCHASE', 'Purchase Order'), ('SALE', 'Sale'), ('TRANSFER', 'Transfer Order'), ('ADJUSTMENT', 'Adjustment'), ('PRODUCTION', 'Production Order'), ('CYCLE_COUNT', 'Cycle Count')], max_length=20, verbose_name='Source Document Type')),
                ('source_document_number', models.CharField(blank=True, max_length=50, verbose_name='Source Document Number')),
                ('movement_date', models.DateField(verbose_name='Movement Date')),
                ('reason', models.CharField(blank=True, max_length=100, verbose_name='Reason')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('from_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outbound_transfers', to='inventory.inventorylocation', verbose_name='From Location')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.inventorylocation', verbose_name='Location')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_movements', to='products.product', verbose_name='Product')),
                ('to_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inbound_transfers', to='inventory.inventorylocation', verbose_name='To Location')),
            ],
            options={
                'verbose_name': 'Inventory Movement',
                'verbose_name_plural': 'Inventory Movements',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['location', 'product', '-created_at'], name='inventory_i_locatio_7170e0_idx'), models.Index(fields=['movement_type', '-created_at'], name='inventory_i_movemen_979428_idx'), models.Index(fields=['batch_number'], name='inventory_i_batch_n_e6df65_idx'), models.Index(fields=['movement_date'], name='inventory_i_movemen_0f2323_idx'), models.Index(fields=['source_document_number'], name='inventory_i_source__cf704e_idx')],
            },
        ),
    ]
