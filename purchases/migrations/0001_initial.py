# Generated by Django 5.2.3 on 2025-07-12 11:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [

        ('nomenclatures', '0002_poslocation_default_customer'),
        ('partners', '0002_customer_price_group'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Document Type Name')),
                ('type_key', models.CharField(choices=[('stock_in', 'Stock In (+)'), ('stock_out', 'Stock Out (-)'), ('invoice', 'Invoice'), ('transfer', 'Internal Transfer')], max_length=20, verbose_name='Type Key')),
                ('stock_effect', models.IntegerField(choices=[(1, 'Increases stock'), (-1, 'Decreases stock'), (0, 'No effect')], default=1, verbose_name='Stock Effect')),
                ('allow_reverse_operations', models.BooleanField(default=False, help_text='Allow negative quantities to reverse the stock effect', verbose_name='Allow Reverse Operations')),
                ('requires_batch', models.BooleanField(default=False, verbose_name='Requires Batch')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Document Type',
                'verbose_name_plural': 'Document Types',
            },
        ),
        migrations.CreateModel(
            name='PurchaseDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_number', models.CharField(max_length=50, unique=True, verbose_name='Document Number')),
                ('document_date', models.DateField(verbose_name='Document Date')),
                ('delivery_date', models.DateField(verbose_name='Delivery Date')),
                ('prices_include_vat', models.BooleanField(default=True, help_text='Whether entered prices include VAT', verbose_name='Prices Include VAT')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('confirmed', 'Confirmed'), ('received', 'Received'), ('cancelled', 'Cancelled'), ('paid', 'Paid'), ('closed', 'Closed')], default='draft', max_length=20, verbose_name='Status')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Is Paid')),
                ('total_before_discount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Before Discount')),
                ('total_discount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Discount')),
                ('total_after_discount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total After Discount')),
                ('total_vat', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total VAT')),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Grand Total')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='purchases.documenttype', verbose_name='Document Type')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.inventorylocation', verbose_name='Location')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='nomenclatures.paymenttype', verbose_name='Payment Method')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='partners.supplier', verbose_name='Supplier')),
            ],
            options={
                'verbose_name': 'Purchase Document',
                'verbose_name_plural': 'Purchase Documents',
                'ordering': ['-document_date', '-document_number'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseDocumentLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_number', models.PositiveIntegerField(verbose_name='Line Number')),
                ('product_name', models.CharField(help_text='Product name at time of purchase', max_length=255, verbose_name='Product Name')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=12, verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=4, help_text='Base unit price from supplier', max_digits=10, verbose_name='Unit Price')),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Discount %')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Discount Amount')),
                ('final_unit_price', models.DecimalField(decimal_places=4, default=0, max_digits=10, verbose_name='Final Unit Price')),
                ('line_total', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Line Total')),
                ('vat_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='VAT Amount')),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Batch Number')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('old_sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Old Sale Price')),
                ('new_sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='New selling price to be set', max_digits=10, null=True, verbose_name='New Sale Price')),
                ('suggested_sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Suggested Sale Price')),
                ('markup_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Markup %')),
                ('quantity_base_unit', models.DecimalField(decimal_places=3, default=0, help_text='Automatically calculated from quantity and unit conversion', max_digits=12, verbose_name='Quantity (Base Unit)')),
                ('unit_price_base', models.DecimalField(decimal_places=4, default=0, help_text='Price per base unit - automatically calculated', max_digits=10, verbose_name='Unit Price (Base Unit)')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='purchases.purchasedocument', verbose_name='Document')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product', verbose_name='Product')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='nomenclatures.unitofmeasure', verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'Purchase Document Line',
                'verbose_name_plural': 'Purchase Document Lines',
                'ordering': ['line_number'],
                'unique_together': {('document', 'line_number')},
            },
        ),
    ]
