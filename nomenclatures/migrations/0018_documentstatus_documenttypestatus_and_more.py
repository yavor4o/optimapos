# Generated by Django 5.2.3 on 2025-08-13 08:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('nomenclatures', '0017_remove_approvalrule_auto_approve_conditions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique code like: draft, submitted, approved', max_length=30, unique=True, verbose_name='Status Code')),
                ('name', models.CharField(help_text='Name shown in UI', max_length=100, verbose_name='Display Name')),
                ('description', models.TextField(blank=True, help_text='Detailed description of this status', verbose_name='Description')),
                ('allow_edit', models.BooleanField(default=False, help_text='Can documents in this status be edited?', verbose_name='Allow Edit')),
                ('allow_delete', models.BooleanField(default=False, help_text='Can documents in this status be deleted?', verbose_name='Allow Delete')),
                ('color', models.CharField(default='#6c757d', help_text='HEX color for badges (#RRGGBB)', max_length=7, verbose_name='Color')),
                ('icon', models.CharField(blank=True, help_text='CSS class for icon (e.g., fa-check, bi-check-circle)', max_length=50, verbose_name='Icon Class')),
                ('badge_class', models.CharField(default='badge-secondary', help_text='Bootstrap badge class', max_length=50, verbose_name='Badge CSS Class')),
                ('is_system', models.BooleanField(default=False, help_text='System status that cannot be deleted', verbose_name='System Status')),
                ('is_active', models.BooleanField(default=True, help_text='Is this status available for use?', verbose_name='Active')),
                ('sort_order', models.IntegerField(default=0, help_text='Order for display', verbose_name='Sort Order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document Status',
                'verbose_name_plural': 'Document Statuses',
                'db_table': 'nomenclature_document_status',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentTypeStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_initial', models.BooleanField(default=False, help_text='Is this the starting status for new documents?', verbose_name='Initial Status')),
                ('is_final', models.BooleanField(default=False, help_text='Is this a final status (no transitions from it)?', verbose_name='Final Status')),
                ('is_cancellation', models.BooleanField(default=False, help_text='Is this the cancellation status for this type?', verbose_name='Cancellation Status')),
                ('custom_name', models.CharField(blank=True, help_text='Override status name for this document type', max_length=100, verbose_name='Custom Name')),
                ('sort_order', models.IntegerField(default=0, help_text='Order in workflow', verbose_name='Sort Order')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Document Type Status Configuration',
                'verbose_name_plural': 'Document Type Status Configurations',
                'db_table': 'nomenclature_document_type_status',
                'ordering': ['document_type', 'sort_order'],
            },
        ),
        migrations.RemoveIndex(
            model_name='approvalrule',
            name='nomenclatur_documen_a70bdd_idx',
        ),
        migrations.RemoveField(
            model_name='approvalrule',
            name='from_status',
        ),
        migrations.RemoveField(
            model_name='approvalrule',
            name='to_status',
        ),
        migrations.AddField(
            model_name='documenttype',
            name='allow_edit_completed',
            field=models.BooleanField(default=False, help_text='Can completed documents be edited?', verbose_name='Allow Edit When Completed'),
        ),
        migrations.AddIndex(
            model_name='documentstatus',
            index=models.Index(fields=['code'], name='nomenclatur_code_10c1e3_idx'),
        ),
        migrations.AddIndex(
            model_name='documentstatus',
            index=models.Index(fields=['is_active'], name='nomenclatur_is_acti_5be550_idx'),
        ),
        migrations.AddField(
            model_name='approvalrule',
            name='from_status_obj',
            field=models.ForeignKey(blank=True, help_text='Starting status for this transition', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approval_rules_from', to='nomenclatures.documentstatus', verbose_name='From Status'),
        ),
        migrations.AddField(
            model_name='approvalrule',
            name='to_status_obj',
            field=models.ForeignKey(blank=True, help_text='Target status for this transition', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approval_rules_to', to='nomenclatures.documentstatus', verbose_name='To Status'),
        ),
        migrations.AddIndex(
            model_name='approvalrule',
            index=models.Index(fields=['document_type', 'from_status_obj', 'to_status_obj'], name='nomenclatur_documen_c3f39e_idx'),
        ),
        migrations.AddField(
            model_name='documenttypestatus',
            name='document_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_statuses', to='nomenclatures.documenttype', verbose_name='Document Type'),
        ),
        migrations.AddField(
            model_name='documenttypestatus',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_configurations', to='nomenclatures.documentstatus', verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='documenttype',
            name='statuses',
            field=models.ManyToManyField(blank=True, help_text='Available statuses for this document type', related_name='document_types', through='nomenclatures.DocumentTypeStatus', to='nomenclatures.documentstatus'),
        ),
        migrations.AddIndex(
            model_name='documenttypestatus',
            index=models.Index(fields=['document_type', 'is_initial'], name='nomenclatur_documen_7e4487_idx'),
        ),
        migrations.AddIndex(
            model_name='documenttypestatus',
            index=models.Index(fields=['document_type', 'is_final'], name='nomenclatur_documen_1ff42b_idx'),
        ),
        migrations.AddIndex(
            model_name='documenttypestatus',
            index=models.Index(fields=['document_type', 'is_cancellation'], name='nomenclatur_documen_ee313f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documenttypestatus',
            unique_together={('document_type', 'status')},
        ),
    ]
